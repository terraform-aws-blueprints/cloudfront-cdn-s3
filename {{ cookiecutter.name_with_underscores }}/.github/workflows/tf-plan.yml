name: terraform-plan
{% raw %}
on: pull_request

jobs:

  terraform-plan-dev:
    
    name: terraform-plan-dev
    runs-on: ubuntu-latest

    env:
      WORKSPACE: 'dev'
      AWS_REGION: 'us-east-1'
      IAM_ROLE_SESSION_NAME: "gha-terraform-dev"
      # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_K_ID_DEV }}
      # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S_ID_DEV }}
    
    permissions:
      id-token: write
      contents: read
    
    
    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get Federated OIDC IAM Role For Environment
        id: iam-role
        run: |
          OIDC=$( cat environments/dev/oidc-iam-role.txt )
          echo $OIDC
          echo "iam_role=$OIDC" >> $GITHUB_OUTPUT
      
      - name: Build Workspace / Environment
        id: build-environment
        env:
          OK_ENV: 'dev'
        run: |
          cd environments/$OK_ENV
          make
          ls -la
          cat terraform.tfvars
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ steps.iam-role.outputs.iam_role }}
          role-session-name: ${{ env.IAM_ROLE_SESSION_NAME }}
      
      - name: Setup AWSCli
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1.0.3
        with:
          version: 2     # default
          verbose: false # default
          arch: amd64    # allowed values: amd64, arm64
      
      - name: Setup Terraform
        id: terraform-setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3
          terraform_wrapper: false
      
      - name: terraform init
        id: terraform-init
        env:
          OK_ENV: 'dev'
        run: terraform -chdir=environments/$OK_ENV init
      
      - name: terraform format
        id: terraform-format
        env:
          OK_ENV: 'dev'
        run: terraform -chdir=environments/$OK_ENV fmt -check -diff
      
      - name: terraform validate
        id: terraform-validate
        env:
          OK_ENV: 'dev'
        run: terraform -chdir=environments/$OK_ENV validate
      
      - name: terraform plan
        id: terraform-plan
        env:
          OK_ENV: 'dev'
        run: |
          set -eu
          cat environments/$OK_ENV/terraform.tfvars
          terraform -chdir=environments/$OK_ENV plan -out tfplan.binary
          terraform_plan_out=$(terraform -chdir=environments/$OK_ENV plan -out tfplan.binary)
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "tf_plan_out<<$EOF" >> $GITHUB_OUTPUT
          echo "$terraform_plan_out" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
{% endraw %}
